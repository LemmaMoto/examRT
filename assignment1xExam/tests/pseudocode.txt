Initialize robot
Set distance and angle thresholds
Create empty set to store paired tokens

Define function to drive for a given time
Define function to turn for a given time
Define function to search for a new token
Define function to search for a paired token
Define function to search for a token with a given code
Define function to reach a token with a given code
Define function to bring an unpaired token to a paired token
Define main function to bring all tokens to one place near the first token seen

In the main function:
    Look for the first token
    If the first token is found:
        Add it to the set of paired tokens
        Look for unpaired tokens
        If an unpaired token is found:
            Look for a paired token
            If a paired token is found:
                Bring the unpaired token to the paired token
            If a paired token is not found:
                Turn and continue searching for a paired token
        If an unpaired token is not found:
            Turn and continue searching for an unpaired token
    If the first token is not found:
        Turn and continue searching for the first token
        
        
        
        
        
# Function to drive for a given time
def drive(speed, seconds):
    Set motor power to speed
    Wait for seconds
    Set motor power to 0

# Function to turn for a given time
def turn(speed, seconds):
    Set motor power for left motor to speed
    Set motor power for right motor to -speed
    Wait for seconds
    Set motor power for both motors to 0

# Function to search for a new token
def Search4NewToken():
    Set NewToken to None
    Set dist to 100
    For each token seen by the robot:
        If the token is not paired and closer than the current closest token:
            Set dist to the distance to the token
            Set NewToken to the code of the token
    If no unpaired token is found:
        Return None
    Else:
        Return the code of the closest unpaired token

# Function to search for a paired token
def SearchPairedToken():
    Set PairedToken to None
    Set dist to 100
    For each token seen by the robot:
        If the token is paired and closer than the current closest token:
            Set dist to the distance to the token
            Set PairedToken to the code of the token
    If no paired token is found:
        Return None
    Else:
        Return the code of the closest paired token

# Function to search for a token with a given code
def SearchToken(code):
    Set dist to 100
    For each token seen by the robot:
        If the token has the given code and closer than the current closest token:
            Set dist to the distance to the token
            Set rot_y to the rotation angle to the token
    If no token with the given code is found:
        Return -1, -1
    Else:
        Return the distance and rotation angle to the closest token with the given code

# Function to reach a token with a given code
def reach_token1(code,handle):
    Print a message indicating that the robot is looking for the token
    Set var to True
    While var is True:
        Search for the token with the given code
        If the token is not found:
            Print a message indicating that the token cannot be found
            Turn the robot to search for the token
        Else if the token is close enough to be grabbed and the robot is not already handling a token:
            Print a message indicating that the token is found
            Set var to False
        Else if the robot is not well aligned with the token:
            Turn the robot to align with the token
        Else if the robot is well aligned with the token:
            Drive the robot forward

# Function to bring a token with a given UnpairedToken to a given PairedToken
def BringToken_i_2_1(UnpairedToken,PairedToken):
    Set handle to False
    Reach the unpaired token with the given code
    Grab the token
    Set handle to True
    Print a message indicating that the robot is bringing the unpaired token to the paired token
    Reach the paired token with the given code
    Release the token
    Add the unpaired token to the set of paired tokens
    Print a message indicating that the token is released
    Drive the robot backward

# Main function to bring all tokens to one place near the first token seen
def main():
    Set time to 0
    Set FindFirstToken to True
    Set FirstToken to None
    While FindFirstToken is True:
        If the first token is not found:
            Search for the first token
            If the first token is found:
                Add it to the set of paired tokens
                Set FindFirstToken to False
                Set FindUnpairedToken to True
                While FindUnpairedToken is True:
                    Search for an unpaired token
                    If an unpaired token is found:
                        Set time to 0
                        Set FindUnpairedToken to False
                        Set FindPairedToken to True
                        While FindPairedToken is True:
                            Search for a paired token
                            If a paired token is found:
                                Set time to 0
                                Bring the unpaired token to the paired token
                                Set FindPairedToken to False
                                Set FindUnpairedToken to True
                            Else if no paired token is found:
                                Print a message indicating that no paired token is found
                                Turn the robot to search for a paired token
                                Increment time
                                If time reaches 20 seconds:
                                    Print a message indicating that all tokens are not paired
                                    Exit the program
                    Else if no unpaired token is found:
                        Print a message indicating that no token is found
                        Turn the robot to search for a token
                        Increment time
                        If time reaches 20 seconds:
                            Print a message indicating that all tokens are paired
                            Exit the program
        Else if the first token is not found for 20 seconds:
            Print a message indicating that no token is found
            Turn the robot to search for a token
            Increment time
            If time reaches 20 seconds:
                Print a message indicating that there are no tokens
                Exit the program

# Call the main function
main()
